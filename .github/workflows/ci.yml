name: Continuous Integration

on: [push, pull_request]

jobs:
  build:
    if: github.repository_owner == 'TandoorRecipes'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          # Build Vue frontend
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install Vue dependencies
        working-directory: ./vue
        run: yarn install
      - name: Build Vue dependencies
        working-directory: ./vue
        run: yarn build
      - name: Install Django dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get install -y libsasl2-dev python3-dev libldap2-dev libssl-dev
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python3 manage.py collectstatic --noinput
          python3 manage.py collectstatic_js_reverse
      - name: Django Testing project
        run: |
          pytest

  e2eTests:
    if: ${{ github.event_name == 'pull_request' || github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          all_but_latest: true
          access_token: ${{ secrets.CANCEL_PREV_BUILD_TOKEN }}

      - uses: actions/checkout@v3
      - name: Set up node Version
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - name: EsLint
        working-directory: ./tests
        run: |
          npm install -D
          npm run lint
      - name: Set up tandoor
        run: |
          cp .env.template .env
          secret_key=$(base64 /dev/urandom | head -c50)
          sed -i "s#SECRET_KEY=.*#SECRET_KEY=$secret_key#;s#POSTGRES_PASSWORD=.*#POSTGRES_PASSWORD=password#;" .env
          docker compose up -d

      - name: Wait for services
        run: |
          sudo apt-get install wait-for-it -y
          wait-for-it -h localhost -p 5432 -t 10 -- echo "psql is up and running."
          wait-for-it -h localhost -p 80 -t 10 -- echo "django is up and running."

      - name: e2e tests
        working-directory: ./tests
        env:
          APP_URL: http://localhost/
        run: |
          npm install -D
          npm run test:e2e e2e/features   
      